[
  {
    "id": "netbox-mcp-server",
    "name": "NetBox MCP Server",
    "description": "This is a simple read-only Model Context Protocol server for NetBox. It enables you to interact with your data in NetBox directly via LLMs that support MCP.",
    "author": "arthanson",
    "repository": "https://github.com/netboxlabs/netbox-mcp-server",
    "documentation": "https://github.com/netboxlabs/netbox-mcp-server/blob/main/README.md",
    "tags": [
      "netbox",
      "sot"
    ],
    "category": "network",
    "language": "python",
    "complexity": "beginner",
    "installCommand": "git clone https://github.com/netboxlabs/netbox-mcp-server.git",
    "configExample": "{\n  \"mcpServers\": {\n    \"netbox\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"/path/to/netbox-mcp-server\",\n        \"run\",\n        \"server.py\"\n      ],\n      \"env\": {\n        \"NETBOX_URL\": \"https://netbox.example.com/\",\n        \"NETBOX_TOKEN\": \"<your-api-token>\"\n      }\n    }\n  }\n}",
    "features": [
      "get_objects\tRetrieves NetBox core objects based on their type and filters",
      "get_object_by_id\tGets detailed information about a specific NetBox object by its ID",
      "get_changelogs\tRetrieves change history records (audit trail) based on filters"
    ],
    "lastUpdated": "2025-09-01",
    "stars": 0
  },
  {
    "id": "gnmibuddy",
    "name": "gNMIBuddy",
    "description": "An over-engineered and opinionated tool that retrieves essential network information from devices using gNMI and OpenConfig models. Designed primarily for LLMs with Model Context Protocol (MCP) integration, it also provides a full CLI for direct use.",
    "author": "Jesus Illescas",
    "repository": "https://github.com/jillesca/gNMIBuddy",
    "documentation": "https://github.com/jillesca/gNMIBuddy",
    "tags": [
      "OpenConfig",
      "gNMI",
      "uv"
    ],
    "category": "network",
    "language": "python",
    "complexity": "advanced",
    "installCommand": "git clone https://github.com/jillesca/gNMIBuddy.git && cd gNMIBuddy && uv sync --frozen --no-dev",
    "configExample": "[\n  {\n    \"name\": \"xrd-1\",\n    \"ip_address\": \"10.10.20.101\",\n    \"nos\": \"iosxr\",\n    \"username\": \"cisco\",\n    \"password\": \"C1sco12345\"\n  },\n  {\n    \"name\": \"xrd-2\",\n    \"ip_address\": \"10.10.20.102\",\n    \"nos\": \"iosxr\",\n    \"path_cert\": \"/opt/certs/device.pem\",\n    \"path_key\": \"/opt/certs/device.key\"\n  }\n]",
    "features": [
      "Routing: BGP, ISIS protocols and neighbor states",
      "Interfaces: Status, configuration, and statistics",
      "MPLS: Labels, forwarding tables, and segment routing",
      "VPN/VRF: L3VPN configuration and route targets",
      "Logs: Filtered device logs with keyword search",
      "Topology: Device neighbors and network-wide topology analysis"
    ],
    "lastUpdated": "2025-09-03",
    "stars": 0
  },
  {
    "id": "infrahub-mcp",
    "name": "Infrahub MCP",
    "description": "Infrahub MCP Server connects your AI assistants to Infrahub using the open MCP standard—so agents can read and (optionally) change your infra state through a consistent, audited, human-approved interface.",
    "author": "Opsmill",
    "repository": "https://github.com/opsmill/infrahub-mcp",
    "documentation": "",
    "tags": [
      "network",
      "sot",
      "mcp",
      "infrastructure",
      "ipam",
      "dcim"
    ],
    "category": "network",
    "language": "python",
    "complexity": "beginner",
    "installCommand": "uv run fastmcp run src/infrahub_mcp/server.py:mcp",
    "configExample": "",
    "features": [
      "List all schema nodes and generics available in Infrahub.",
      "Retrieve the full schema for a specific kind (attributes, relationships, and types).",
      "Get all objects of a specific kind from Infrahub.",
      "Retrieve related nodes by relation name for a given kind.",
      "Retrieve all branches from Infrahub.",
      "Execute a GraphQL operation against Infrahub."
    ],
    "lastUpdated": "2025-09-03",
    "stars": 0
  },
  {
  "id": "unifi-network-mcp-server",
  "name": "UniFi Network MCP Server",
  "description": "A self-hosted Model Context Protocol (MCP) server that turns your UniFi Network Controller into a rich set of programmable tools. Every capability is exposed via standard MCP tools prefixed with unifi_, so any LLM or agent that speaks MCP (e.g. Claude Desktop, mcp-cli, LangChain, etc.) can query, analyse and – when explicitly confirmed – modify your network.",
  "author": "sirkirby",
  "repository": "https://github.com/sirkirby/unifi-network-mcp",
  "documentation": "https://github.com/sirkirby/unifi-network-mcp/blob/main/README.md",
  "tags": [
    "network",
    "unifi"
  ],
  "category": "network",
  "language": "python",
  "complexity": "intermediate",
  "installCommand": "uv pip install unifi-network-mcp",
  "configExample": "\"unifi-network-mcp\": {\n  \"command\": \"/path/to/your/.local/bin/uvx\",\n  \"args\": [\"--quiet\", \"unifi-network-mcp\"],\n  \"env\": {\n    \"UNIFI_HOST\": \"192.168.1.1\",\n    \"UNIFI_USERNAME\": \"admin\",\n    \"UNIFI_PASSWORD\": \"secret\",\n    \"UNIFI_PORT\": \"443\",\n    \"UNIFI_SITE\": \"default\",\n    \"UNIFI_VERIFY_SSL\": \"false\"\n  }\n}",
  "features": [],
  "lastUpdated": "2025-09-05",
  "stars": 0
}
]
